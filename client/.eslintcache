[{"C:\\Users\\Augusto\\Desktop\\Projects\\Segfy\\ProjetoSegfy\\client\\src\\index.js":"1","C:\\Users\\Augusto\\Desktop\\Projects\\Segfy\\ProjetoSegfy\\client\\src\\App.js":"2","C:\\Users\\Augusto\\Desktop\\Projects\\Segfy\\ProjetoSegfy\\client\\src\\Api\\api.js":"3","C:\\Users\\Augusto\\Desktop\\Projects\\Segfy\\ProjetoSegfy\\client\\src\\Components\\UI\\Input.js":"4","C:\\Users\\Augusto\\Desktop\\Projects\\Segfy\\ProjetoSegfy\\client\\src\\Components\\Home\\Home.js":"5","C:\\Users\\Augusto\\Desktop\\Projects\\Segfy\\ProjetoSegfy\\client\\src\\Components\\Home\\ResultArea.js":"6","C:\\Users\\Augusto\\Desktop\\Projects\\Segfy\\ProjetoSegfy\\client\\src\\Components\\UI\\Card.js":"7","C:\\Users\\Augusto\\Desktop\\Projects\\Segfy\\ProjetoSegfy\\client\\src\\Components\\UI\\Button.js":"8","C:\\Users\\Augusto\\Desktop\\Projects\\Segfy\\ProjetoSegfy\\client\\src\\Components\\Home\\HeroDetails.js":"9"},{"size":220,"mtime":1611266973411,"results":"10","hashOfConfig":"11"},{"size":334,"mtime":1611277857020,"results":"12","hashOfConfig":"11"},{"size":3033,"mtime":1611373253409,"results":"13","hashOfConfig":"11"},{"size":329,"mtime":1611278525553,"results":"14","hashOfConfig":"11"},{"size":2364,"mtime":1611372152410,"results":"15","hashOfConfig":"11"},{"size":886,"mtime":1611372842167,"results":"16","hashOfConfig":"11"},{"size":284,"mtime":1611313712022,"results":"17","hashOfConfig":"11"},{"size":253,"mtime":1611286113322,"results":"18","hashOfConfig":"11"},{"size":1906,"mtime":1611406339017,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1s0a2u5",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Augusto\\Desktop\\Projects\\Segfy\\ProjetoSegfy\\client\\src\\index.js",[],["41","42"],"C:\\Users\\Augusto\\Desktop\\Projects\\Segfy\\ProjetoSegfy\\client\\src\\App.js",[],"C:\\Users\\Augusto\\Desktop\\Projects\\Segfy\\ProjetoSegfy\\client\\src\\Api\\api.js",["43","44"],"import CryptoJS from 'crypto-js';\r\n\r\nvar timestamp = new Date().getTime();\r\nconst publicKey = 'a6e211518cd2bb6a0c04355eb705682c';\r\nconst privateKey = '544ca8af816a130b36185ee09060b79a88e97465';\r\nconst ts = timestamp; //'greatgreatgreatstring';\r\nconst URL = 'http://gateway.marvel.com';\r\nconst hash = CryptoJS.MD5(ts + privateKey + publicKey);\r\nconst limit = 20;\r\n\r\nfunction LIST_CHARS(page = 0) {\r\n  const offset = 20 * page; //passo de 20 max 74\r\n  return {\r\n    url:\r\n      URL +\r\n      '/v1/public/characters?ts=' +\r\n      ts +\r\n      '&apikey=' +\r\n      publicKey +\r\n      '&hash=' +\r\n      hash +\r\n      '&limit=' +\r\n      limit +\r\n      '&offset=' +\r\n      offset,\r\n    options: {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        Accept: 'application/json',\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport async function listChars(page) {\r\n  const { url, options } = LIST_CHARS(page);\r\n  const response = await fetch(url, options);\r\n  const json = await response.json();\r\n  //console.log(json);\r\n  return json;\r\n}\r\n\r\nfunction LIST_COMICS_BY_CHAR_ID(charId, limit = 20, page = 0) {\r\n  const offset = 20 * page; //passo de 20 max 74\r\n  return {\r\n    url:\r\n      URL +\r\n      '/v1/public/characters/' +\r\n      charId +\r\n      '/comics?ts=' +\r\n      ts +\r\n      '&apikey=' +\r\n      publicKey +\r\n      '&hash=' +\r\n      hash +\r\n      '&limit=' +\r\n      limit +\r\n      '&offset=' +\r\n      offset +\r\n      '&format=comic',\r\n    options: {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        Accept: 'application/json',\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport async function listComicsByCharId(charId, page = 0) {\r\n  const { url, options } = LIST_COMICS_BY_CHAR_ID(charId, page);\r\n  const response = await fetch(url, options);\r\n  const json = await response.json();\r\n  //console.log(json);\r\n  return json;\r\n}\r\n\r\nfunction FIND_CHAR(page = 0) {\r\n  const offset = 100 * page; //passo de 20 max 74\r\n  let lim = 100;\r\n  return {\r\n    url:\r\n      URL +\r\n      '/v1/public/characters?ts=' +\r\n      ts +\r\n      '&apikey=' +\r\n      publicKey +\r\n      '&hash=' +\r\n      hash +\r\n      '&limit=' +\r\n      lim +\r\n      '&offset=' +\r\n      offset,\r\n    options: {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        Accept: 'application/json',\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport async function findChar(nameChar) {\r\n  const { url, options } = FIND_CHAR();\r\n  const response = await fetch(url, options);\r\n  const json = await response.json();\r\n\r\n  let charTarget = null;\r\n  let max = (json.data.total - (json.data.total % 100)) / 100 + 1;\r\n  let count = 0;\r\n\r\n  while (count <= max && charTarget === null) {\r\n    const { url, options } = FIND_CHAR(count);\r\n    const response = await fetch(url, options);\r\n    const json = await response.json();\r\n    let dataList = json.data.results;\r\n\r\n    dataList.map((target) => {\r\n      if (target.name === nameChar) charTarget = target;\r\n    });\r\n    count++;\r\n  }\r\n\r\n  return charTarget;\r\n}\r\n","C:\\Users\\Augusto\\Desktop\\Projects\\Segfy\\ProjetoSegfy\\client\\src\\Components\\UI\\Input.js",[],"C:\\Users\\Augusto\\Desktop\\Projects\\Segfy\\ProjetoSegfy\\client\\src\\Components\\Home\\Home.js",["45"],"import React from 'react';\r\nimport Input from './../UI/Input';\r\nimport ResultArea from './ResultArea';\r\nimport { findChar, listChars } from './../../Api/api';\r\nimport styles from './Home.module.css';\r\nimport Button from '../UI/Button';\r\nconst Home = () => {\r\n  const [data, setData] = React.useState(null);\r\n  const [currentPage, setCurrentPage] = React.useState(0);\r\n  const [cardSelected, setCardSelected] = React.useState(false);\r\n  const [selectedCardInfo, setSelectedCardInfo] = React.useState(null);\r\n  const [nameChar, setNameChar] = React.useState('');\r\n  const [dataChar, setDataChar] = React.useState(false);\r\n\r\n  React.useEffect(async () => {\r\n    let result = await listChars(currentPage);\r\n    setData(JSON.stringify(result.data.results));\r\n  }, [currentPage]);\r\n\r\n  function nextPage() {\r\n    const lastPage = 74;\r\n    if (currentPage < lastPage && !cardSelected)\r\n      return setCurrentPage(currentPage + 1);\r\n  }\r\n\r\n  function backPage() {\r\n    const firstPage = 0;\r\n    if (currentPage > firstPage && !cardSelected)\r\n      return setCurrentPage(currentPage - 1);\r\n    if (cardSelected || dataChar) {\r\n      setCardSelected(false);\r\n      setSelectedCardInfo(null);\r\n      setDataChar(false);\r\n      return setCurrentPage(currentPage);\r\n    }\r\n  }\r\n\r\n  function onChange(event) {\r\n    setNameChar(event.target.value);\r\n  }\r\n\r\n  async function findByName() {\r\n    let result = await findChar(nameChar);\r\n    setDataChar(JSON.stringify([result]));\r\n    console.log(JSON.parse(dataChar));\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <div className={styles.container}>\r\n        <div>\r\n          <Input\r\n            onChange={onChange}\r\n            label=\"Nome do Personagem\"\r\n            input=\"pesonagem\"\r\n            placeholder=\"Insira o nome do personagem aqui\"\r\n          />\r\n          <Button nameButton=\"Pesquisar\" onClick={findByName} />\r\n        </div>\r\n\r\n        <div>\r\n          <ResultArea\r\n            data={dataChar ? dataChar : data}\r\n            cardSelected={cardSelected}\r\n            setCardSelected={setCardSelected}\r\n            selectedCardInfo={selectedCardInfo}\r\n            setSelectedCardInfo={setSelectedCardInfo}\r\n          />\r\n        </div>\r\n        <Button nameButton=\"< Back\" onClick={backPage} />\r\n        <Button nameButton=\"Next >\" onClick={nextPage} />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\Augusto\\Desktop\\Projects\\Segfy\\ProjetoSegfy\\client\\src\\Components\\Home\\ResultArea.js",[],"C:\\Users\\Augusto\\Desktop\\Projects\\Segfy\\ProjetoSegfy\\client\\src\\Components\\UI\\Card.js",[],"C:\\Users\\Augusto\\Desktop\\Projects\\Segfy\\ProjetoSegfy\\client\\src\\Components\\UI\\Button.js",[],"C:\\Users\\Augusto\\Desktop\\Projects\\Segfy\\ProjetoSegfy\\client\\src\\Components\\Home\\HeroDetails.js",["46"],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":121,"column":18,"nodeType":"53","messageId":"54","endLine":123,"endColumn":6},{"ruleId":"55","severity":1,"message":"56","line":121,"column":27,"nodeType":"53","messageId":"57","endLine":121,"endColumn":29},{"ruleId":"58","severity":1,"message":"59","line":15,"column":19,"nodeType":"53","endLine":18,"endColumn":4},{"ruleId":"58","severity":1,"message":"59","line":9,"column":19,"nodeType":"53","endLine":12,"endColumn":4},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'charTarget'.","ArrowFunctionExpression","unsafeRefs","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","no-global-assign","no-unsafe-negation"]