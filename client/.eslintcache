[{"C:\\Users\\Augusto\\Desktop\\Projects\\Segfy\\ProjetoSegfy\\client\\src\\index.js":"1","C:\\Users\\Augusto\\Desktop\\Projects\\Segfy\\ProjetoSegfy\\client\\src\\App.js":"2","C:\\Users\\Augusto\\Desktop\\Projects\\Segfy\\ProjetoSegfy\\client\\src\\Api\\api.js":"3","C:\\Users\\Augusto\\Desktop\\Projects\\Segfy\\ProjetoSegfy\\client\\src\\Components\\UI\\Input.js":"4","C:\\Users\\Augusto\\Desktop\\Projects\\Segfy\\ProjetoSegfy\\client\\src\\Components\\Home\\Home.js":"5","C:\\Users\\Augusto\\Desktop\\Projects\\Segfy\\ProjetoSegfy\\client\\src\\Components\\Home\\ResultArea.js":"6","C:\\Users\\Augusto\\Desktop\\Projects\\Segfy\\ProjetoSegfy\\client\\src\\Components\\UI\\Card.js":"7","C:\\Users\\Augusto\\Desktop\\Projects\\Segfy\\ProjetoSegfy\\client\\src\\Components\\UI\\Button.js":"8","C:\\Users\\Augusto\\Desktop\\Projects\\Segfy\\ProjetoSegfy\\client\\src\\Components\\Home\\HeroDetails.js":"9","C:\\Users\\Augusto\\Desktop\\Projects\\Segfy\\ProjetoSegfy\\client\\src\\Components\\UI\\Form\\FormFindChar.js":"10"},{"size":220,"mtime":1611266973411,"results":"11","hashOfConfig":"12"},{"size":334,"mtime":1611277857020,"results":"13","hashOfConfig":"12"},{"size":3033,"mtime":1611373253409,"results":"14","hashOfConfig":"12"},{"size":481,"mtime":1611428463544,"results":"15","hashOfConfig":"12"},{"size":2685,"mtime":1611425100202,"results":"16","hashOfConfig":"12"},{"size":959,"mtime":1611411631155,"results":"17","hashOfConfig":"12"},{"size":298,"mtime":1611420338499,"results":"18","hashOfConfig":"12"},{"size":271,"mtime":1611424924999,"results":"19","hashOfConfig":"12"},{"size":2004,"mtime":1611410250744,"results":"20","hashOfConfig":"12"},{"size":593,"mtime":1611424907618,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1s0a2u5",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Augusto\\Desktop\\Projects\\Segfy\\ProjetoSegfy\\client\\src\\index.js",[],["44","45"],"C:\\Users\\Augusto\\Desktop\\Projects\\Segfy\\ProjetoSegfy\\client\\src\\App.js",[],"C:\\Users\\Augusto\\Desktop\\Projects\\Segfy\\ProjetoSegfy\\client\\src\\Api\\api.js",["46","47"],"import CryptoJS from 'crypto-js';\r\n\r\nvar timestamp = new Date().getTime();\r\nconst publicKey = 'a6e211518cd2bb6a0c04355eb705682c';\r\nconst privateKey = '544ca8af816a130b36185ee09060b79a88e97465';\r\nconst ts = timestamp; //'greatgreatgreatstring';\r\nconst URL = 'http://gateway.marvel.com';\r\nconst hash = CryptoJS.MD5(ts + privateKey + publicKey);\r\nconst limit = 20;\r\n\r\nfunction LIST_CHARS(page = 0) {\r\n  const offset = 20 * page; //passo de 20 max 74\r\n  return {\r\n    url:\r\n      URL +\r\n      '/v1/public/characters?ts=' +\r\n      ts +\r\n      '&apikey=' +\r\n      publicKey +\r\n      '&hash=' +\r\n      hash +\r\n      '&limit=' +\r\n      limit +\r\n      '&offset=' +\r\n      offset,\r\n    options: {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        Accept: 'application/json',\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport async function listChars(page) {\r\n  const { url, options } = LIST_CHARS(page);\r\n  const response = await fetch(url, options);\r\n  const json = await response.json();\r\n  //console.log(json);\r\n  return json;\r\n}\r\n\r\nfunction LIST_COMICS_BY_CHAR_ID(charId, limit = 20, page = 0) {\r\n  const offset = 20 * page; //passo de 20 max 74\r\n  return {\r\n    url:\r\n      URL +\r\n      '/v1/public/characters/' +\r\n      charId +\r\n      '/comics?ts=' +\r\n      ts +\r\n      '&apikey=' +\r\n      publicKey +\r\n      '&hash=' +\r\n      hash +\r\n      '&limit=' +\r\n      limit +\r\n      '&offset=' +\r\n      offset +\r\n      '&format=comic',\r\n    options: {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        Accept: 'application/json',\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport async function listComicsByCharId(charId, page = 0) {\r\n  const { url, options } = LIST_COMICS_BY_CHAR_ID(charId, page);\r\n  const response = await fetch(url, options);\r\n  const json = await response.json();\r\n  //console.log(json);\r\n  return json;\r\n}\r\n\r\nfunction FIND_CHAR(page = 0) {\r\n  const offset = 100 * page; //passo de 20 max 74\r\n  let lim = 100;\r\n  return {\r\n    url:\r\n      URL +\r\n      '/v1/public/characters?ts=' +\r\n      ts +\r\n      '&apikey=' +\r\n      publicKey +\r\n      '&hash=' +\r\n      hash +\r\n      '&limit=' +\r\n      lim +\r\n      '&offset=' +\r\n      offset,\r\n    options: {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        Accept: 'application/json',\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport async function findChar(nameChar) {\r\n  const { url, options } = FIND_CHAR();\r\n  const response = await fetch(url, options);\r\n  const json = await response.json();\r\n\r\n  let charTarget = null;\r\n  let max = (json.data.total - (json.data.total % 100)) / 100 + 1;\r\n  let count = 0;\r\n\r\n  while (count <= max && charTarget === null) {\r\n    const { url, options } = FIND_CHAR(count);\r\n    const response = await fetch(url, options);\r\n    const json = await response.json();\r\n    let dataList = json.data.results;\r\n\r\n    dataList.map((target) => {\r\n      if (target.name === nameChar) charTarget = target;\r\n    });\r\n    count++;\r\n  }\r\n\r\n  return charTarget;\r\n}\r\n","C:\\Users\\Augusto\\Desktop\\Projects\\Segfy\\ProjetoSegfy\\client\\src\\Components\\UI\\Input.js",[],"C:\\Users\\Augusto\\Desktop\\Projects\\Segfy\\ProjetoSegfy\\client\\src\\Components\\Home\\Home.js",["48"],"C:\\Users\\Augusto\\Desktop\\Projects\\Segfy\\ProjetoSegfy\\client\\src\\Components\\Home\\ResultArea.js",[],"C:\\Users\\Augusto\\Desktop\\Projects\\Segfy\\ProjetoSegfy\\client\\src\\Components\\UI\\Card.js",[],"C:\\Users\\Augusto\\Desktop\\Projects\\Segfy\\ProjetoSegfy\\client\\src\\Components\\UI\\Button.js",[],"C:\\Users\\Augusto\\Desktop\\Projects\\Segfy\\ProjetoSegfy\\client\\src\\Components\\Home\\HeroDetails.js",["49"],"C:\\Users\\Augusto\\Desktop\\Projects\\Segfy\\ProjetoSegfy\\client\\src\\Components\\UI\\Form\\FormFindChar.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":121,"column":18,"nodeType":"56","messageId":"57","endLine":123,"endColumn":6},{"ruleId":"58","severity":1,"message":"59","line":121,"column":27,"nodeType":"56","messageId":"60","endLine":121,"endColumn":29},{"ruleId":"61","severity":1,"message":"62","line":16,"column":19,"nodeType":"56","endLine":19,"endColumn":4},{"ruleId":"61","severity":1,"message":"62","line":9,"column":19,"nodeType":"56","endLine":12,"endColumn":4},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'charTarget'.","ArrowFunctionExpression","unsafeRefs","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","no-global-assign","no-unsafe-negation"]